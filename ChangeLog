xx-xx-xxxx Remon Sijrier <remon@vt.shuis.tudelft.nl>
	* Released 0.xx.x
	
	* Ported the SongView and related classes to QGraphicsView
	* VUMeter restyling and made iec conformant by N. Doebelin.
	* Major GUI refresh!
	* Added HistoryView Widget, depends on QUndo framework
	* Created Plugin 'framework'.
	* LV2 plugin support has been added, using the Plugin 'framework'
	* Created AddRemoveItemCommand. This command wil be used by ALL
	  "Audio Processing Objects". The objects are added/removed directly
	  if the associated Song isn't running, else it's using Tsar's thread
	  save add/remove functionality.
	  The command (of course) also provides un/redo support!
	* Created HistoryWidget, updated HistoryStack to make this possible.
	  Command classes have been updated with a description which is shown in 
	  the HistoryView.
	* Added a MenuBar to please non-guru users ;-)
	* Peak class 'rewrite' (again).
	  Now peaks for all zoom levels are stored on hard disk, and ONLY loaded
	  when needed, no pre-buffering anymore (which save a HUGE amount of runtime
	  memory).
	  Peak files have a header with version information, and seek offsets to quickly
	  seek to the correct zoomlevel.
	  Normalization levels are stored in the peak file, as to quickly calculate the 
	  normalization factor for a certain range (results in instantanious normalization
	  calculation !)
	* Fade's are a Curve class now, with a strength and bend value to calculate the shape
	* Fade Editor View created, with Contextual Interface to edit the Fade shape in an 
	  advanced way. Open with < E > on a Fade View 
	* (Re)Added visuale cursor feedback on Hold Actions. 


19-08-2006 Remon Sijrier <remon@vt.shuis.tudelft.nl>
	* Released 0.30.1
	
	* Fixed 2 possible crash bugs.
	* Added "merged waveform drawing for stereo tracks"
	* Snapping improved considerably!
	* Traverso builds on Mac OS X now!
	* Fix clip normalization, scans only the Clips source range
	* Move the AudioClip during move visually again to the targetTrack!
	* Solo/Mute improvements
	* Sync audioclip readsource buffers to first point of use in case the 
	  sync position of a seek isn't in the range of the audioclip!
	  Fixes bug #16919

05-07-2006 Remon Sijrier <remon@vt.shuis.tudelft.nl>
	* Released 0.30.0
	
	* Added a "select project dir" in Project manager view.
	* Correctly set AudioClip track start/end frame at startup.
	* Fixed project render progress indication for long Songs (> 16 minutes)
	* Don't load/set a newly created Project, so the SongView of the current loaded
	  project will still be accessible!
	* Fixed issues with solo-stereo AudioClips in one Track. 
	* Make pan work for solo AudioClips as well.
	* Made fadeout adjustment follow the mouse which is more natural.
	* Added "Draw Rectified Wave" radiobutton in Settings View.
	* A number of crashing fixes.
	* Some more (important) stuff I don't remember ;-)


16-06-2006 Remon Sijrier <remon@vt.shuis.tudelft.nl>
	* Released 0.30.0-rc1
	
	* Fixed a memory corruption bug which caused the computer to halt when the Jack driver
	  was running on Project export.
	* Fixed bug where audioclip edges were set at the wrong position on AudioClip split.
	* Fixed AudioClip drag, sometimes the AudioClip got duplicated in one of the Tracks.
	* Fixed solo-mute bug, sometimes the AudioClip got silenced after Track solo-mute state change,
	  where it should not.
	* Correctly calculate the Song render start and end frame.
	* Added (de)normalization for AudioClips

23-05-2006 Remon Sijrier <remon@vt.shuis.tudelft.nl>
	* Released 0.29.0
	
	All changes below are from the fork until the release of 0.29.0
	
	* Fully seperated the GUI from the core code. Core code is a library, named libtraversocore
	* Ported to Qt4, no Qt3 Support is needed.
	* The application links statically to libtraversocore, and has all resource files compiled in,
		so no install is needed (makes testing builds much more comfortable)
	* Reimplemented the audio rendering, and driver backends. 
		This means: 
		- Support for Jack, and much better support for ALSA.
		- Normalized bitdepth (32 bit float), making bitdepth transparent throughout the application.
		- Using libsndfile for audio reading/writing, resulting in much more stable audio file
			read/writes and more audio formats are supported transparently, including FLAC
		- Audio file read/writes are decoupled from the audio thread with lockless ringbuffers
			greatly improving (soft) realtime behaviour.
	* Fade In/Out improved. Fade's are Curves now, with a number of presets.
	* Removed hard coded "Keyboard Shortcuts" code, replaced with scripting functionallity provided
		by Qt. Key shortcuts are stored in an xml file now, and can be reloaded at runtime!
	* Project rendering improved due use of libsndfile. Export to a number of audio formats, including 
		samplerate conversion is possible.
	* Runtime switching to Jack/ALSA/Null driver supported, including setting a new samplerate and/or 
		latency. It's inavitable that changing the driver or driver parameters will cause a short
		sound drop in case the application is playing/recording.
	* History implemented (a.k.a. Un/Redo).
	* Contextual Menu's.
	* Drag and Drop Audiofiles into any Track, or manually Import audiofiles.
	* Audio Waveform drawing improved, 2 modes are possible, "Classic View" and "Rectified View".
	* Improved "Help" Dialog, with a short introduction on how to use the application.
	* Indication of total CPU _time_ spend in both the audio thread and hard disk I/O thread.
	* Massive code cleaning, and adoption of one coding style.
	* Better Object Oriented Design, better information encapsulation using Qt signal/slot feature.
	* More "minor" things I don't remember ;-)
		

2005-09-13 Remon Sijrier <remon@vt.shuis.tudelft.nl>
	The author of the Protux/libmustux project decided to cancel my participation in the mustux project. 
	 
	I decided to fork the project, any help is of course welcome :-) 

